{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["IndexContainer","styled","div","_templateObject","Index","render","postEdges","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","config","siteTitle","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_7__","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_6__","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","replace","substr","slice","module","exports","Header","header","Header_Header","_","_useState","useState","react_default","gatsby_browser_entry","to","Wrapper","layout_templateObject","MainLayout","children","Helmet_default","name","content","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","i","component","TypeError","push","str","join","parts","split","normalize","arguments","call","undefined","__webpack_require__","PostList","PostListing","getPostList","postList","forEach","postEdge","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","map","post","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","SEO","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","urljoin","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property"],"mappings":"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","file":"component---src-pages-index-jsx-53d5a0633367dbfa2021.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nconst IndexContainer = styled.div``;\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <IndexContainer>\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <PostListing postEdges={postEdges} />\n        </IndexContainer>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: \"Glog\", // Site title.\n  siteTitleShort: \"Glog\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Glog\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://fed-gren.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/glog\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"\", // FB Application ID for using app insights\n  googleAnalyticsID: \"\", // GA tracking ID.\n  disqusShortname: \"\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Gren\", // Username to display in the author segment.\n  userEmail: \"deveb22@gmail.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription: \"Front-end developer\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/fed-gren\",\n      iconClassName: \"fa fa-github\"\n    },\n    // {\n    //   label: \"Twitter\",\n    //   url: \"https://twitter.com/Vagr9K\",\n    //   iconClassName: \"fa fa-twitter\"\n    // },\n    {\n      label: \"Email\",\n      url: \"mailto:deveb22@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2019. Advanced User\" // Copyright string for the footer of the website and RSS feed.\n  // themeColor: \"#e50a13\", // Used for setting manifest and progress theme colors.\n  // themeFontColor: \"#f5f5f5\",\n  // themeBackgroundColor: \"#000\", // Used for setting manifest background color.\n  // lightMode: false,\n  // lightThemeColor: \"#74dae7\",\n  // lightThemeFontColor: \"#cecece\",\n  // lightThemeBackgroundColor: \"#f5f5f5\"\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport config from \"../../../data/SiteConfig\";\nimport LightSwitch from \"../LightSwitch/LightSwitch\";\n\nconst Header = styled.header`\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 1rem;\n  width: 100%;\n  position: -webkit-sticky;\n  position: sticky;\n\n  & > h1 {\n    margin: 0;\n    font-size: 1.5rem;\n  }\n\n  & a {\n    text-decoration: none;\n  }\n\n  & a:visited {\n    text-decoration: none;\n    color: #e50a13;\n  }\n  & a:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport default _ => {\n  const [checked, setChecked] = useState(false);\n\n  const changeHandler = checked => {\n    setChecked(checked);\n    console.log(checked);\n    config.lightMode = checked;\n  };\n\n  return (\n    <Header>\n      <Link to=\"/\">\n        <h1>{config.siteTitle}</h1>\n      </Link>\n      {/* <LightSwitch changeHandler={changeHandler} checked={checked} /> */}\n    </Header>\n  );\n};\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.css\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header/Header\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 1rem 1.8rem;\n`;\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <Wrapper>\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        <Header />\n        {children}\n      </Wrapper>\n    );\n  }\n}\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostList = styled.div`\n  padding: 0.8rem 1.5rem;\n\n  & a,\n  & a:visited {\n    text-decoration: none;\n    color: #f5f5f5;\n  }\n\n  & a:hover {\n    text-decoration: underline;\n  }\n`;\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList();\n    return (\n      <PostList>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <h1>{post.title}</h1>\n          </Link>\n        ))}\n      </PostList>\n    );\n  }\n}\n\nexport default PostListing;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}
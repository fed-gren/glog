{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","replace","substr","slice","module","exports","Header","styled","header","_templateObject","Header_Header","_","_useState","useState","react_default","gatsby_browser_entry","to","Wrapper","div","layout_templateObject","MainLayout","children","Helmet_default","name","content","PostList","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","react__WEBPACK_IMPORTED_MODULE_2___default","map","post","gatsby__WEBPACK_IMPORTED_MODULE_3__","key"],"mappings":"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","file":"component---src-templates-category-jsx-47edcd1a8b04b41a81e0.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"category-container\">\n          <Helmet\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n          />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: \"Glog\", // Site title.\n  siteTitleShort: \"Glog\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Glog\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://fed-gren.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/glog\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"\", // FB Application ID for using app insights\n  googleAnalyticsID: \"\", // GA tracking ID.\n  disqusShortname: \"\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Gren\", // Username to display in the author segment.\n  userEmail: \"deveb22@gmail.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription: \"Front-end developer\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/fed-gren\",\n      iconClassName: \"fa fa-github\"\n    },\n    // {\n    //   label: \"Twitter\",\n    //   url: \"https://twitter.com/Vagr9K\",\n    //   iconClassName: \"fa fa-twitter\"\n    // },\n    {\n      label: \"Email\",\n      url: \"mailto:deveb22@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright Â© 2019. Advanced User\" // Copyright string for the footer of the website and RSS feed.\n  // themeColor: \"#e50a13\", // Used for setting manifest and progress theme colors.\n  // themeFontColor: \"#f5f5f5\",\n  // themeBackgroundColor: \"#000\", // Used for setting manifest background color.\n  // lightMode: false,\n  // lightThemeColor: \"#74dae7\",\n  // lightThemeFontColor: \"#cecece\",\n  // lightThemeBackgroundColor: \"#f5f5f5\"\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport config from \"../../../data/SiteConfig\";\n\nconst Header = styled.header`\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 1rem;\n  width: 100%;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n\n  & > h1 {\n    margin: 0;\n    font-size: 1.5rem;\n  }\n\n  & a {\n    text-decoration: none;\n  }\n\n  & a:visited {\n    text-decoration: none;\n    color: #e50a13;\n  }\n  & a:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport default _ => {\n  const [checked, setChecked] = useState(false);\n\n  const changeHandler = checked => {\n    setChecked(checked);\n    console.log(checked);\n    config.lightMode = checked;\n  };\n\n  return (\n    <Header>\n      <Link to=\"/\">\n        <h1>{config.siteTitle}</h1>\n      </Link>\n    </Header>\n  );\n};\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.css\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header/Header\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 1rem 1.8rem;\n`;\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <Wrapper>\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        <Header />\n        {children}\n      </Wrapper>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostList = styled.div`\n  padding: 0.8rem 1.5rem;\n\n  & a,\n  & a:visited {\n    text-decoration: none;\n    color: #f5f5f5;\n  }\n\n  & a:hover {\n    text-decoration: underline;\n  }\n`;\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList();\n    return (\n      <PostList>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <h1>{post.title}</h1>\n          </Link>\n        ))}\n      </PostList>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}